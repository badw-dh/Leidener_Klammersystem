# LKS-grammar

### Infos and Ressources ##############################################
# Unicode character search: https://www.amp-what.com/unicode/search/
# Unicode Explorer: https://unicode-explorer.com/ , https://unicode.mayastudios.com/
#######################################################################


#######################################################################
#
#  EBNF-Directives
#
#######################################################################

@ whitespace  = / */
@ literalws   = none
# @ comment     = /#.*/
@ ignorecase  = False
@ reduction   = merge
@ drop        = whitespace, backticked

#######################################################################
#
# Grammar for the Leiden-System used in The German Inscriptions
#
#######################################################################

inscription = (tags | inline | special | LF)+ §EOF
HIDE:inline = phrases | letters | partial | unreadable | cross | separator | space | footnote
HIDE:tags   = apptag | tag
apptag      =  /<(appnum|appalpha)[^>]*>[^<]*<\/\1>/+
tag         =  /<\/?[^>]+>/+
letters     = /[A-ZÄÖÜa-zäöü0-9](?!\u0323)/+
partial     =  combined | precomposed
HIDE:combined    = /[a-zA-Z0-9]\u0323/
HIDE:precomposed    = /[ẠḄḌẸḤỊḴḶṂṆỌṚṢṬỤṾẈỴẒạḅḍẹḥịḳḷṃṇọṛṣṭụṿẉỵẓ]/
phrases     = (letters | partial) "."
unreadable  = `.`+ # TODO: Umbauen, muss in Klammern sein
cross       = `+`
# punctuation = `/`
separator   = separator_word | separator_syl | separator_line
HIDE:separator_word = ~"∙"~ | ~"·"~
HIDE:separator_syl  = ~"=/"~
HIDE:separator_line = ~"/"~
space       = " "~
footnote    = /[a-z]\)/

HIDE:special = rasure | vacat | missing | omission | restored | addendum | litura | redundancy
rasure      = `[[` § inline+ `]]`
vacat       = `[vacat]`
missing     = `[` (unreadable | unknown) `]`
omission    = `(` § (letters | space)+ `)`
restored    = `[` § (omission | inline)+ `]` # TODO: | LF
addendum    = `&lt;` (tags | inline+ | `---` | `.`+) `&gt;`
litura      = `&lt;` § correct (`=` false)? `&gt;` # TODO: See DI rules
correct     = { letters | restored | space }
false       = inline
redundancy  = `{` § inline+ `}`
letter      = /[a-z]/
unknown     = `-`+

LF          = /[\n|]|\|\|/ | ~"/"~
DROP:EOF =  !/./
