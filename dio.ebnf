#######################################################################
#
# Grammar for the Content of the Inscription Field in the DIO-T3 Database
#
#######################################################################


#
#  EBNF-Directives ----

#
@ whitespace  = / */
@ literalws   = none
# @ comment     = /#.*/
@ ignorecase  = False
@ reduction   = merge
@ drop        = whitespace, backticked


#
# Container Grammar ----
#

sco            = prettyspace `<sco>` prettyspace sec+ `</sco>` prettyspace §EOF
sec            = `<sec>` prettyspace ( snt | snr )* par* `</sec>` prettyspace

snr            = `<snr>` /[A-Z]+/ "." prettyspace `</snr>` prettyspace

#snt         = `<snt>` prettyspace /(?:(?!<\/snt>)[\w .:,;()<>\/])+/ prettyspace `</snt>` prettyspace
snt            = `<snt>` (b | /[^<]+/) `</snt>` prettyspace
b              = prettyspace `<b>` /[^<]+/ `</b>` prettyspace

par            = `<par>` prettyspace (lno | lin | table)+ `</par>` prettyspace

lno            = `<lno>` § inscription `</lno>` prettyspace
lin            = `<lin>` § inscription `</lin>` prettyspace

table  = `<table>` prettyspace row+ `</table>` prettyspace
row    = `<row>` prettyspace cell+ `</row>` prettyspace
cell   = `<cell>` prettyspace entry+ `</cell>` prettyspace
entry  = `<entry>` § inscription `</entry>` prettyspace

#
# Transcription Grammar ----
#

HIDE:inscription = ( inline | brackets )+
HIDE:inline  = tags | insec | letters | terminator | separator | space
terminator = /(?<!\s)[\.:,;]/

#
# Tags ----
#

HIDE:tags   = app | all | strong | em | chr | sup | nl

HIDE:app    = appalpha | appnum
appalpha    = `<appalpha id=` app_id `>` app_nr `</appalpha>`
appnum      = `<appnum id=` app_id `>` app_nr `</appnum>`
app_id      = /[^>]*/
app_nr      = /[^<]*/

all         = `<lig>` (letters | brackets | space)+ `</lig>`
strong      = `<strong>` letters space? `</strong>`
em          = `<em>` letters space? `</em>`
chr         = `<chr>` letters space? `</chr>`
sup         = `<sup>` letters space? `</sup>`
nl          = `<nl></nl>`

#
# Letters ----
#

letters = letters_range | letters_sequence

HIDE:letters_sequence         = letters_plain | letters_extended | letters_cross | letters_apostrophe
HIDE:letters_range       = letters_sequence "-" letters_sequence
HIDE:letters_plain       = /[A-Za-z0-9](?!\u0323)/+
HIDE:letters_extended    = /[àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ](?!\u0323)/+
HIDE:letters_cross       = /[+†]/
HIDE:letters_apostrophe  =  "'"

insec                  =  combined_plain | combined_extended | precomposed

HIDE:combined_plain    = /[a-zA-Z0-9](\u0323)/
HIDE:combined_extended = /[àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ](\u0323)/
HIDE:precomposed       = /[ẠḄḌẸḤỊḲḶṂṆỌṚṢṬỤṾẈỴẒạḅḍẹḥịḳḷṃṇọṛṣṭụṿẉỵẓ]/

#
# Separators ----
#

HIDE:separator   = z | wtr

wtr = sep_word_insec | sep_word_dot |  sep_word_period | sep_word_comma | sep_word_colon | sep_word_equal

# Moved to attribute value in AST
sep_word_dot           = ~"·"~
sep_word_insec         = ~ /· ?(\u0323)/ ~
sep_word_period        = ~"."~ #
sep_word_colon         = ~":"~
sep_word_comma         = ~","~
sep_word_equal         = /(?<!\s)=(?!\s)/

z = sep_line_double_insec | sep_line_double | sep_line_pre | sep_line_space | sep_line_post | sep_line_hyphen | sep_line_slash

# Moved to attribute value in AST
sep_line_slash          = ~"/"~
sep_line_pre           = ~"=/"~
sep_line_space         = ~"= /"~
sep_line_post          = ~"/="
sep_line_double        = ~"=/="~
sep_line_double_insec  = /=\u0323\/=|=\/=\u0323/
sep_line_hyphen        = /(?<!-)-\// | /(?<!-)-(?=<)/

#
# Brackets ----
#

HIDE:brackets =  oms | abr | rasure | deletion | cpl | add

oms             = `[(` (tags | deletion_nested | inline |  brackets)+ `)]`
abr             = `(` inline+ `)`
rasure          = `[[` (tags | deletion_nested | inline |  brackets)+ `]]`
deletion        = `[` lost `]` # Renamed to del in AST
deletion_nested = lost         # Renamed to del in AST
cpl             = `[` (tags | deletion_nested | inline |  brackets)+ `]`
add             = `&lt;` (tags | deletion_nested | inline | brackets)+ `&gt;`

HIDE:lost  = unknown | known
HIDE:unknown         = `---` | `--`
HIDE:known           = "."+

#
# Space ----
#

space        = /\s/~ ! separator
DROP:prettyspace  = /[\r\n ]*/
DROP:EOF    =  !/./

