# DIO-SCO-grammar

### Infos and Ressources ##############################################
# Unicode character search: https://www.amp-what.com/unicode/search/
# Unicode Explorer: https://unicode-explorer.com/ , https://unicode.mayastudios.com/
#######################################################################


#######################################################################
#
#  EBNF-Directives
#
#######################################################################

@ whitespace  = / */
@ literalws   = none
# @ comment     = /#.*/
@ ignorecase  = False
@ reduction   = merge
@ drop        = whitespace, backticked

#######################################################################
#
# Grammar for the Content of the inscription field in the DIO-T3 database
#
#######################################################################

sco            = prettyspace sco_open prettyspace sec+ sco_close prettyspace §EOF
DROP:sco_open  = "<sco>"
DROP:sco_close = "</sco>"

# sec            = sec_open prettyspace sn* (prettyspace par)* sec_close prettyspace
sec            = sec_one | sec_multi
HIDE:sec_one   = sec_open prettyspace par sec_close prettyspace
HIDE:sec_multi = sec_open § prettyspace sn+ prettyspace par* sec_close prettyspace
DROP:sec_open  = "<sec>"
DROP:sec_close = "</sec>"

HIDE:sn        = snt | snr
snr            = snr_open /[A-Z]+/ "." prettyspace snr_close prettyspace
DROP:snr_open  = "<snr>"
DROP:snr_close = "</snr>"
snt            = snt_open prettyspace ueberschrift prettyspace snt_close prettyspace
   ueberschrift = /(?:(?!<\/snt>)[\w .:,;()<>\/])+/
DROP:snt_open  = "<snt>"
DROP:snt_close = "</snt>"

par            = par_open prettyspace (lno | lin | table)+ par_close prettyspace
DROP:par_open       = "<par>"
DROP:par_close       = "</par>"

lno            = lno_open § inscription lno_close prettyspace
DROP:lno_open  = "<lno>"
DROP:lno_close = "</lno>"
lin            = lin_open § inscription lin_close prettyspace
DROP:lin_open  = "<lin>"
DROP:lin_close = "</lin>"

HIDE:table  = "<table>" prettyspace row+ "</table>" prettyspace
HIDE:row    = "<row>" prettyspace cell+ "</row>" prettyspace
HIDE:cell   = "<cell>" prettyspace entry+ "</cell>" prettyspace
HIDE:entry  = "<entry>" § inscription "</entry>" prettyspace

HIDE:inscription = (inline | brackets | prettyspace )+
HIDE:inline = phrases | token | space

HIDE:phrases           = (token | brackets)+ space? phrase_terminator
HIDE:phrase_terminator = "." | ":" | "," | ";"

HIDE:token = tags | insec | range | letters | separator | apostrophe
HIDE:tags   = apptag | ligtag | breaktag | btag | strongtag | emtag | suptab
apptag      =  /<(appnum|appalpha)[^>]*>[^<]*<\/\1>/+
ligtag      = "<lig>" | "</lig>"
breaktag    = "<nl></nl>"
btag       = "<b>" | "</b>"
strongtag  = "<strong>" | "</strong>"
emtag       = "<em>" | "</em>"
suptab      = "<sup>" | "</sup>"
apostrophe  =  "'"

HIDE:letters = letters_plain | letters_extended | cross
HIDE:letters_plain       = /[A-Za-z0-9](?!\u0323)/+
HIDE:letters_extended    = /[àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ](?!\u0323)/+

HIDE:cross       = /[+†]/
HIDE:range     = letters "-" letters

insec            =  combined_plain | combined_extended | precomposed
HIDE:combined_plain    = /[a-zA-Z0-9](\u0323)/
HIDE:combined_extended = /[àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ](\u0323)/
HIDE:precomposed = /[ẠḄḌẸḤỊḲḶṂṆỌṚṢṬỤṾẈỴẒạḅḍẹḥịḳḷṃṇọṛṣṭụṿẉỵẓ]/

HIDE:separator   = separator_word_insec | separator_word |  separator_word_dot | separator_syl | separator_line | separator_colon
separator_word       = ~"∙"~ | ~"·"~
separator_word_dot   = ~"."~
separator_word_insec = ~ /[∙·] ?(\u0323)/ ~
separator_line       = ~"/"~
separator_colon      = ~":"~

HIDE:separator_syl = separator_syl_double_insec | separator_syl_double | separator_syl_single | separator_syl_space | separator_syl_nextline
separator_syl_single        = ~"=/"~
separator_syl_space         = ~"= /"~
separator_syl_nextline      = ~"/="
separator_syl_double        = ~"=/="~
separator_syl_double_insec  = /=\u0323\/=|=\/=\u0323/

HIDE:brackets = rasure | deletion | cpl | abr | add
rasure       = `[[` § inline+ `]]`
deletion     = `[` (unreadable | unknown ) `]`
cpl          = `[` § (inline | unknown | tags | abr)+ `]`
abr          = `(` § (letters | insec | space )+ `)`
add          = `&lt;` (tags | brackets | unknown | inline)+ `&gt;`

unreadable  = `.`+
unknown     = `---` | `--`

HIDE:space        = " "~ ! separator
DROP:prettyspace  = /[\r\n ]*/
DROP:EOF    =  !/./

